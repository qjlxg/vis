name: 自动获取 C 类基金代码

on:
  # 允许手动触发
  workflow_dispatch:
  # 定时触发（每天凌晨 00:00 运行）
  schedule:
    - cron: '0 0 * * *'
  # 当此工作流文件或 Python 脚本被推送时触发
  push:
    paths:
      - '.github/workflows/fetch_c_fund_codes.yml'
      - 'fetch_c_fund_codes.py'

jobs:
  update-c-codes:
    runs-on: ubuntu-latest
    
    steps:
      # 步骤 1: 检出仓库代码
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # 使用 GITHUB_TOKEN 确保 Actions 有权限提交
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      # 步骤 2: 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # 步骤 3: 安装依赖库 (只需 pandas 和 requests)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests

      # 步骤 4: 执行 Python 脚本
      - name: Run C fund code script
        run: python fetch_c_fund_codes.py

      # 步骤 5: 配置 Git 提交身份
      - name: Configure Git user
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 步骤 6: 提交和推送 C0类.txt
      - name: Commit and Push C0类.txt
        run: |
          # 检查 C0类.txt 是否存在或有变化
          if [ -f "C0类.txt" ] && ! git diff --quiet -- "C0类.txt"; then
              echo "C0类.txt has changes, attempting to commit..."
              
              git add C0类.txt
              
              # 创建提交信息
              git commit -m "🤖 chore: Update C fund codes (C0类.txt)"
              
              # *** 关键修复：拉取远程最新内容并 rebase，解决推送冲突 ***
              git pull --rebase origin main 
              
              # 推送更改
              git push
              echo "Successfully committed and pushed C0类.txt"
          else
              echo "C0类.txt not found or no changes detected. Skipping commit."
          fi

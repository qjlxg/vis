name: 净值更新 Fetch Fund Net Value Data

# 定义触发条件
on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/fetch_fund_data.yml'
      - 'fund_spider.py'
      - 'C类.txt'
  schedule:
      - cron: 0 */10 * * *

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
      # 步骤 1: 检出仓库代码 (关键修改: 添加权限)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # 授予 actions 令牌写入权限
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      # 步骤 2: 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # 步骤 3: 缓存 Python 依赖 (保持不变)
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 步骤 4: 安装依赖库 (保持不变)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests beautifulsoup4 aiohttp lxml tenacity
      
      # *** 新增步骤 5：设置 Git 提交身份 ***
      - name: Configure Git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      # 步骤 6: 执行 Python 爬虫脚本 (关键修改: 确保即使失败也继续)
      - name: Run fund spider script
        run: |
          python fund_spider.py
        # 允许此步骤失败，但工作流继续执行，以便提交已保存的数据
        continue-on-error: true 

      # 步骤 7: 提交和推送新数据 (关键修改: 强制执行提交)
      - name: Commit and Push new data
        # 无论前面步骤结果如何，都执行此步骤
        if: always()
        run: |
          echo "Checking for new/updated files in fund_data/..."
          
          # 检查 fund_data 目录是否存在且包含文件
          if [ -d "fund_data" ] && [ "$(ls -A fund_data/*.csv fund_data/*.json 2>/dev/null | wc -l)" -gt 0 ]; then
              # 添加所有新的或修改过的文件
              git add fund_data/*.csv fund_data/*.json || true
              
              # 检查是否有文件待提交
              if ! git diff --quiet --cached; then
                  echo "Found changes, attempting to commit..."
                  git commit -m "🤖 chore: Update fund net value data at ${{ github.event.schedule || github.event.head_commit.timestamp || 'manual run' }}"
                  # 推送更改
                  git push
                  echo "Successfully committed and pushed changes."
              else
                  echo "No changes found to commit."
              fi
          else
              echo "fund_data directory not found or is empty. Skipping commit."
          fi
